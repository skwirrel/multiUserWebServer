
# =======================================
# MUWS
# =======================================

sudo apt-get install git
cd ~
git clone https://github.com/skwirrel/multiUserWebServer.git

# =======================================
# CONFIGURATION 
# =======================================

cd ~
mkdir multiUserWebServer
cat << 'END' >> multiUserWebServer/scripts/multiUserWebServer.conf
# GENERAL

baseDomain='<your value here>'

# EMAIL

emailFromAddress=''
emailUserDomain=''
smtpServerAddress=''

# LDAP Configuration

ldapServer=''
ldapUser=''
ldapPassword=''
ldapGroup=''
ldapBase=''
END

source multiUserWebServer/scripts/multiUserWebServer.conf

# =======================================
# INSTALL BASE PACKAGES
# =======================================

sudo apt-get update && sudo apt-get upgrade -y

sudo apt-get install -y wget mlocate unattended-upgrades net-tools ldap-utils git

sudo dpkg-reconfigure -plow unattended-upgrades

sudo systemctl enable --now unattended-upgrades.service


# =======================================
# APACHE
# =======================================
sudo apt-get update
sudo apt-get install -y apache2 libapache2-mod-php php php-common php-cli php-gd php-curl php-mysql
sudo systemctl enable apache2
sudo systemctl start apache2


sudo apt-get update
sudo apt-get install -y mariadb-server mariadb-client
sudo systemctl enable mariadb
sudo systemctl start mariadb

# Apache mpm-itk - allows each vhost to run as a different user
sudo apt-get install libapache2-mpm-itk
sudo a2dismod mpm_worker
sudo a2dismod mpm_event
sudo systemctl restart apache2

# =======================================
# MySQL (MariaDB)
# =======================================

mysqlPassword=`head /dev/urandom | md5sum |cut -d ' ' -f 1`
echo
echo "****************************************************"
echo "use this password for MySQL: $mysqlPassword";
echo "****************************************************"
echo
echo "Current password should be empty..."
echo "About to run mysql_secure_installation - press enter to continue"
read

mysql_secure_installation

cat << END > ~/.my.cnf
[client]
user=root
password=$mysqlPassword
END
service mariadb restart

apt-get install phpmyadmin


# =======================================
# PHP Config
# =======================================

# setting php open_basedir - lock users into their own webspace

mkdir -p /home/allUsers/public_html
cat << 'END' > /home/allUsers/public_html/autoPrepend.php
<?php
    $studentId=getenv('studentId');
    if (!strlen($studentId)) echo 'No student Id'.exit();
    
    $homedir='/home/'.$studentId.'/public_html/';
    if (!is_dir($homedir)) echo 'No home directory'.exit();
    ini_set('open_basedir',$homedir);
END
chmod o+x /home/allUsers
chmod o+x /home/allUsers/public_html/
chmod o+r /home/allUsers/public_html/autoPrepend.php
echo '<?php $studentId=getenv("studentId"); if (!strlen($studentId)) echo "No student Id".exit(); $homedir="/home/".$studentId; if (!is_dir($homedir)) echo "No home directory".exit(); ini_set("open_basedir",$homedir);' > /home/allUsers/public_html/autoPrepend.php

PHP_VERSION=$(php -v | head -n 1 | awk '{print $2}' | cut -d '.' -f 1,2)
PHP_INI="/etc/php/$PHP_VERSION/apache2/php.ini"

# Check if `display_errors` is Off in php.ini
if grep -q "^display_errors = Off" "$PHP_INI"; then
    echo "Error reporting is disabled. Enabling it now..."
    
    # Enable display_errors
    sudo sed -i 's/^display_errors = Off/display_errors = On/' "$PHP_INI"
    
    # Optionally, you might want to adjust error_reporting level, e.g., to E_ALL
    sudo sed -i 's/^error_reporting = .*/error_reporting = E_ALL/' "$PHP_INI"

    echo "Restarting Apache to apply changes..."
    sudo systemctl restart apache2
    echo "Error reporting has been enabled."
else
    echo "Error reporting is already enabled or the setting was not found."
fi


# =======================================
# SFTP
# =======================================

/usr/sbin/groupadd sftpUser

mkdir -p /home/allUsers/skel/public_html
chgrp root /home/allUsers/skel/public_html
chmod 700 /home/allUsers/skel/public_html
chmod 750 /home/allUsers/skel

if ( ! egrep -q '^# Multiuser Web Server Config' /etc/ssh/sshd_config ); then
    echo "Updating ssh config"
    cat << 'END' >> /etc/ssh/sshd_config

        # Multiuser Web Server Config 
        Match Group sftpUser
            PasswordAuthentication yes
            ChrootDirectory /home/%u
            # -m forces permissions on all newly created files - Doesn't seem to be supported on Debian
            # -u 0077 make all files uploaded readable only by the user themselves
            # -d sets startup directory - Doesn't seem to be work on Debian
            # -P setstat,fsetstat = don't let users change the permissions of files
            ForceCommand internal-sftp -u 0077 -d /public_html -P setstat,fsetstat
            AllowTcpForwarding no
END
    service sshd restart
fi

# =======================================
# APACHE CONFIG
# =======================================
# Put the apache config in place if it isn't there already...

APACHE_CONFIG="/etc/apache2/sites-available/multiUserWebServer.conf"
escapedDomain=`echo $baseDomain |  sed 's/\./\\\\./g'`
if [ ! -e "$APACHE_CONFIG" ]; then
        cat << END > "$APACHE_CONFIG"
<VirtualHost *:80>
        # Multiuser Web Server Config
        UseCanonicalName Off

        <Directory "/home/*/public_html">
            Require all granted
            Options -Indexes -FollowSymLinks +SymLinksIfOwnerMatch
            AllowOverride All Options=ExecCGI,Includes,IncludesNOEXEC,Indexes,MultiViews,SymLinksIfOwnerMatch
            DirectoryIndex index.html index.php _default_index.html
        </Directory>

        <FilesMatch "^\.">
            Require all denied
        </FilesMatch>
        <DirectoryMatch "/\.">
            Require all denied
        </DirectoryMatch>

        Alias "/_default_index.html" "/home/allUsers/public_html/_default_index.html"

        RewriteMap lowercase int:tolower

        RewriteEngine on
        RewriteCond "${lowercase:%{HTTP_HOST}}" ^(.+)$escapedDomain$
        RewriteCond %{REQUEST_URI} !^/_default_index\.html$
        RewriteRule "^(.*)" "/home/%1/public_html$1" [E=StudentId:%1]

        AssignUserIDExpr %{reqenv:StudentId}
        AssignGroupIDExpr %{reqenv:StudentId}
        php_admin_value auto_prepend_file "/home/allUsers/public_html/autoPrepend.php"
</VirtualHost>

LimitUIDRange 1000 9000
# Enabling this cause Apache to crash on startup so had to disable it
EnableCapabilities Off
END
fi

APACHE_CONFIG="/etc/apache2/sites-available/phpmyadmin.conf"
if [ ! -e "$APACHE_CONFIG" ]; then
        cat << END > "$APACHE_CONFIG"

<VirtualHost *:80>
        ServerName phpmyadmin.$baseDomain
        DocumentRoot /usr/share/phpmyadmin/

	AssignUserIDExpr phpmyadmin
        AssignGroupIDExpr phpmyadmin

        <Directory /usr/share/phpmyadmin/>
           AddDefaultCharset UTF-8

           <IfModule mod_authz_core.c>
             # Apache 2.4
             <RequireAny>
               Require ip 10.
             </RequireAny>
           </IfModule>
        </Directory>

        <Directory /usr/share/phpmyadmin/setup/>
           <IfModule mod_authz_core.c>
             # Apache 2.4
             <RequireAny>
               Require ip 10.
             </RequireAny>
           </IfModule>
        </Directory>

        # These directories do not require access over HTTP - taken from the original
        # phpmyadmin upstream tarball
        #
        <Directory /usr/share/phpmyadmin/libraries/>
            Order Deny,Allow
            Deny from All
            Allow from None
        </Directory>

        <Directory /usr/share/phpmyadmin/setup/lib/>
            Order Deny,Allow
            Deny from All
            Allow from None
        </Directory>

        <Directory /usr/share/phpmyadmin/setup/frames/>
            Order Deny,Allow
            Deny from All
            Allow from None
        </Directory>

        # This configuration prevents mod_security at phpmyadmin directories from
        # filtering SQL etc.  This may break your mod_security implementation.
        #
        #<IfModule mod_security.c>
        #    <Directory /usr/share/phpmyadmin/>
        #        SecRuleInheritance Off
        #    </Directory>
        #</IfModule>
</VirtualHost>

END
fi

a2ensite phpmyadmin.conf
a2ensite multiUserWebServer.conf

service apache2 restart



# =======================================
# Final tweaks 
# =======================================
touch /var/lib/phpmyadmin/blowfish_secret.inc.php
chgrp phpmyadmin /var/lib/phpmyadmin/blowfish_secret.inc.php
chgrp phpmyadmin /etc/phpmyadmin/config-db.php


